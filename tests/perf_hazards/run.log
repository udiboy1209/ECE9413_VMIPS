IO Directory: /home/udiboy/projects/CompArch/VMIPS_simulator/tests/perf_hazards
Config - Parameters loaded from file: /home/udiboy/projects/CompArch/VMIPS_simulator/tests/perf_hazards/Config.txt
Config parameters: {'dataQueueDepth': 4, 'computeQueueDepth': 4, 'vdmNumBanks': 16, 'vdmBankWait': 4, 'vlsPipelineDepth': 11, 'numLanes': 4, 'pipelineDepthMul': 12, 'pipelineDepthAdd': 2, 'pipelineDepthDiv': 8}
ITrace - Instruction trace loaded from file: /home/udiboy/projects/CompArch/VMIPS_simulator/tests/perf_hazards/trace.txt
===== cycle 0
  fetch: 0:CVM:[]
===== cycle 1
  decode: 0:CVM:[]
  fetch: 1:POP:[SR1]
===== cycle 2
  dispatch scalar: 0:CVM:[]
  decode: 1:POP:[SR1]
===== cycle 3
  backend scalar: 0:CVM:[]
  decode: 1:POP:[SR1]
  fetch: 2:MTCL:[SR1]
===== cycle 4
  dispatch scalar: 1:POP:[SR1]
  decode: 2:MTCL:[SR1]
===== cycle 5
  backend scalar: 1:POP:[SR1]
  decode: 2:MTCL:[SR1]
  fetch: 3:ADDVV:[VR2, VR2, VR3]
===== cycle 6
  dispatch scalar: 2:MTCL:[SR1]
  decode: 3:ADDVV:[VR2, VR2, VR3]
===== cycle 7
  backend scalar: 2:MTCL:[SR1]
  decode: 3:ADDVV:[VR2, VR2, VR3]
  fetch: 4:LS:[SR1, SR0, 0]
===== cycle 8
  dispatch vcomp: 3:ADDVV:[VR2, VR2, VR3]
  decode: 4:LS:[SR1, SR0, 0]
  fetch: 5:ADD:[SR0, SR0, SR0]
===== cycle 9
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 17
  dispatch scalar: 4:LS:[SR1, SR0, 0]
  decode: 5:ADD:[SR0, SR0, SR0]
  fetch: 6:SUBVV:[VR5, VR6, VR7]
===== cycle 10
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 16
  backend scalar: 4:LS:[SR1, SR0, 0]
  dispatch scalar: 5:ADD:[SR0, SR0, SR0]
  decode: 6:SUBVV:[VR5, VR6, VR7]
  fetch: 7:MULVV:[VR6, VR2, VR3]
===== cycle 11
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 15
  backend scalar: 5:ADD:[SR0, SR0, SR0]
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 12
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 14
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 13
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 13
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 14
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 12
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 15
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 11
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 16
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 10
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 17
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 9
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 18
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 8
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 19
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 7
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 20
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 6
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 21
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 5
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 22
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 4
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 23
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 3
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 24
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 2
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 25
  backend add: 3:ADDVV:[VR2, VR2, VR3] cycles 1
  dispatch vcomp: 6:SUBVV:[VR5, VR6, VR7]
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 26
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 17
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 27
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 16
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 28
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 15
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 29
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 14
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 30
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 13
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 31
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 12
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 32
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 11
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 33
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 10
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 34
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 9
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 35
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 8
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 36
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 7
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 37
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 6
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 38
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 5
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 39
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 4
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 40
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 3
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 41
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 2
  decode: 7:MULVV:[VR6, VR2, VR3]
===== cycle 42
  backend add: 6:SUBVV:[VR5, VR6, VR7] cycles 1
  decode: 7:MULVV:[VR6, VR2, VR3]
  fetch: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 43
  dispatch vcomp: 7:MULVV:[VR6, VR2, VR3]
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 44
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 27
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 45
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 26
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 46
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 25
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 47
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 24
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 48
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 23
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 49
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 22
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 50
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 21
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 51
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 20
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 52
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 19
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 53
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 18
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 54
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 17
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 55
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 16
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 56
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 15
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 57
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 14
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 58
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 13
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 59
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 12
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 60
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 11
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 61
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 10
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 62
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 9
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 63
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 8
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 64
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 7
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 65
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 6
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 66
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 5
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 67
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 4
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 68
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 3
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 69
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 2
  decode: 8:SUBVV:[VR0, VR5, VR6]
===== cycle 70
  backend mul: 7:MULVV:[VR6, VR2, VR3] cycles 1
  decode: 8:SUBVV:[VR0, VR5, VR6]
  fetch: 9:ADD:[SR2, SR1, SR1]
===== cycle 71
  dispatch vcomp: 8:SUBVV:[VR0, VR5, VR6]
  decode: 9:ADD:[SR2, SR1, SR1]
  fetch: 10:MULVS:[VR5, VR2, SR2]
===== cycle 72
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 17
  dispatch scalar: 9:ADD:[SR2, SR1, SR1]
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 73
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 16
  backend scalar: 9:ADD:[SR2, SR1, SR1]
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 74
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 15
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 75
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 14
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 76
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 13
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 77
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 12
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 78
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 11
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 79
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 10
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 80
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 9
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 81
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 8
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 82
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 7
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 83
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 6
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 84
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 5
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 85
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 4
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 86
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 3
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 87
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 2
  decode: 10:MULVS:[VR5, VR2, SR2]
===== cycle 88
  backend add: 8:SUBVV:[VR0, VR5, VR6] cycles 1
  decode: 10:MULVS:[VR5, VR2, SR2]
  fetch: 11:SEQVV:[VR1, VR1]
===== cycle 89
  dispatch vcomp: 10:MULVS:[VR5, VR2, SR2]
  decode: 11:SEQVV:[VR1, VR1]
  fetch: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 90
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 27
  dispatch vcomp: 11:SEQVV:[VR1, VR1]
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 91
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 26
  backend add: 11:SEQVV:[VR1, VR1] cycles 17
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 92
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 25
  backend add: 11:SEQVV:[VR1, VR1] cycles 16
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 93
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 24
  backend add: 11:SEQVV:[VR1, VR1] cycles 15
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 94
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 23
  backend add: 11:SEQVV:[VR1, VR1] cycles 14
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 95
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 22
  backend add: 11:SEQVV:[VR1, VR1] cycles 13
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 96
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 21
  backend add: 11:SEQVV:[VR1, VR1] cycles 12
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 97
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 20
  backend add: 11:SEQVV:[VR1, VR1] cycles 11
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 98
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 19
  backend add: 11:SEQVV:[VR1, VR1] cycles 10
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 99
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 18
  backend add: 11:SEQVV:[VR1, VR1] cycles 9
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 100
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 17
  backend add: 11:SEQVV:[VR1, VR1] cycles 8
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 101
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 16
  backend add: 11:SEQVV:[VR1, VR1] cycles 7
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 102
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 15
  backend add: 11:SEQVV:[VR1, VR1] cycles 6
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 103
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 14
  backend add: 11:SEQVV:[VR1, VR1] cycles 5
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 104
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 13
  backend add: 11:SEQVV:[VR1, VR1] cycles 4
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 105
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 12
  backend add: 11:SEQVV:[VR1, VR1] cycles 3
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 106
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 11
  backend add: 11:SEQVV:[VR1, VR1] cycles 2
  decode: 12:DIVVS:[VR0, VR7, SR6]
===== cycle 107
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 10
  backend add: 11:SEQVV:[VR1, VR1] cycles 1
  decode: 12:DIVVS:[VR0, VR7, SR6]
  fetch: 13:MTCL:[SR2]
===== cycle 108
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 9
  dispatch vcomp: 12:DIVVS:[VR0, VR7, SR6]
  decode: 13:MTCL:[SR2]
  fetch: 14:MULVV:[VR3, VR1, VR1]
===== cycle 109
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 8
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 23
  dispatch scalar: 13:MTCL:[SR2]
  decode: 14:MULVV:[VR3, VR1, VR1]
===== cycle 110
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 7
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 22
  backend scalar: 13:MTCL:[SR2]
  decode: 14:MULVV:[VR3, VR1, VR1]
  fetch: 15:MTCL:[SR2]
===== cycle 111
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 6
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 21
  dispatch vcomp: 14:MULVV:[VR3, VR1, VR1]
  decode: 15:MTCL:[SR2]
  fetch: 16:MFCL:[SR3]
===== cycle 112
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 5
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 20
  dispatch vcomp: 14:MULVV:[VR3, VR1, VR1]
  dispatch scalar: 15:MTCL:[SR2]
  decode: 16:MFCL:[SR3]
===== cycle 113
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 4
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 19
  backend scalar: 15:MTCL:[SR2]
  dispatch vcomp: 14:MULVV:[VR3, VR1, VR1]
  decode: 16:MFCL:[SR3]
  fetch: 17:SEQVV:[VR1, VR1]
===== cycle 114
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 3
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 18
  dispatch vcomp: 14:MULVV:[VR3, VR1, VR1]
  dispatch scalar: 16:MFCL:[SR3]
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 115
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 2
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 17
  backend scalar: 16:MFCL:[SR3]
  dispatch vcomp: 14:MULVV:[VR3, VR1, VR1]
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 116
  backend mul: 10:MULVS:[VR5, VR2, SR2] cycles 1
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 16
  dispatch vcomp: 14:MULVV:[VR3, VR1, VR1]
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 117
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 14
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 15
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 118
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 13
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 14
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 119
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 12
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 13
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 120
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 11
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 12
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 121
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 10
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 11
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 122
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 9
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 10
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 123
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 8
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 9
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 124
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 7
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 8
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 125
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 6
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 7
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 126
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 5
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 6
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 127
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 4
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 5
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 128
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 3
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 4
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 129
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 2
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 3
  decode: 17:SEQVV:[VR1, VR1]
===== cycle 130
  backend mul: 14:MULVV:[VR3, VR1, VR1] cycles 1
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 2
  decode: 17:SEQVV:[VR1, VR1]
  fetch: 18:CVM:[]
===== cycle 131
  backend div: 12:DIVVS:[VR0, VR7, SR6] cycles 1
  dispatch vcomp: 17:SEQVV:[VR1, VR1]
  decode: 18:CVM:[]
===== cycle 132
  backend add: 17:SEQVV:[VR1, VR1] cycles 17
  decode: 18:CVM:[]
===== cycle 133
  backend add: 17:SEQVV:[VR1, VR1] cycles 16
  decode: 18:CVM:[]
===== cycle 134
  backend add: 17:SEQVV:[VR1, VR1] cycles 15
  decode: 18:CVM:[]
===== cycle 135
  backend add: 17:SEQVV:[VR1, VR1] cycles 14
  decode: 18:CVM:[]
===== cycle 136
  backend add: 17:SEQVV:[VR1, VR1] cycles 13
  decode: 18:CVM:[]
===== cycle 137
  backend add: 17:SEQVV:[VR1, VR1] cycles 12
  decode: 18:CVM:[]
===== cycle 138
  backend add: 17:SEQVV:[VR1, VR1] cycles 11
  decode: 18:CVM:[]
===== cycle 139
  backend add: 17:SEQVV:[VR1, VR1] cycles 10
  decode: 18:CVM:[]
===== cycle 140
  backend add: 17:SEQVV:[VR1, VR1] cycles 9
  decode: 18:CVM:[]
===== cycle 141
  backend add: 17:SEQVV:[VR1, VR1] cycles 8
  decode: 18:CVM:[]
===== cycle 142
  backend add: 17:SEQVV:[VR1, VR1] cycles 7
  decode: 18:CVM:[]
===== cycle 143
  backend add: 17:SEQVV:[VR1, VR1] cycles 6
  decode: 18:CVM:[]
===== cycle 144
  backend add: 17:SEQVV:[VR1, VR1] cycles 5
  decode: 18:CVM:[]
===== cycle 145
  backend add: 17:SEQVV:[VR1, VR1] cycles 4
  decode: 18:CVM:[]
===== cycle 146
  backend add: 17:SEQVV:[VR1, VR1] cycles 3
  decode: 18:CVM:[]
===== cycle 147
  backend add: 17:SEQVV:[VR1, VR1] cycles 2
  decode: 18:CVM:[]
===== cycle 148
  backend add: 17:SEQVV:[VR1, VR1] cycles 1
  decode: 18:CVM:[]
  fetch: 19:HALT:[]
===== cycle 149
  dispatch scalar: 18:CVM:[]
  decode: 19:HALT:[]
===== cycle 150
  backend scalar: 18:CVM:[]
  dispatch scalar: 19:HALT:[]
===== cycle 151
  backend scalar: 19:HALT:[]
