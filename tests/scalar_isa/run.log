IO Directory: /home/udiboy/projects/CompArch/VMIPS_simulator/tests/scalar_isa
Config - Parameters loaded from file: /home/udiboy/projects/CompArch/VMIPS_simulator/tests/scalar_isa/Config.txt
Config parameters: {'dataQueueDepth': 4, 'computeQueueDepth': 4, 'vdmNumBanks': 16, 'vlsPipelineDepth': 11, 'numLanes': 4, 'pipelineDepthMul': 12, 'pipelineDepthAdd': 2, 'pipelineDepthDiv': 8}
ITrace - Instruction trace loaded from file: /home/udiboy/projects/CompArch/VMIPS_simulator/tests/scalar_isa/trace.txt
===== cycle 0
  fetch: 0:CVM:[]
===== cycle 1
  decode: 0:CVM:[]
  fetch: 1:POP:[SR1]
===== cycle 2
  dispatch scalar: 0:CVM:[]
  decode: 1:POP:[SR1]
  fetch: 2:MTCL:[SR1]
===== cycle 3
  backend scalar: 0:CVM:[]
  dispatch scalar: 1:POP:[SR1]
  decode: 2:MTCL:[SR1]
===== cycle 4
  backend scalar: 1:POP:[SR1]
  decode: 2:MTCL:[SR1]
  fetch: 3:MFCL:[SR1]
===== cycle 5
  dispatch scalar: 2:MTCL:[SR1]
  decode: 3:MFCL:[SR1]
===== cycle 6
  backend scalar: 2:MTCL:[SR1]
  decode: 3:MFCL:[SR1]
  fetch: 4:LS:[SR2, SR0, 0]
===== cycle 7
  dispatch scalar: 3:MFCL:[SR1]
  decode: 4:LS:[SR2, SR0, 0]
  fetch: 5:LS:[SR3, SR0, 1]
===== cycle 8
  backend scalar: 3:MFCL:[SR1]
  dispatch scalar: 4:LS:[SR2, SR0, 0]
  decode: 5:LS:[SR3, SR0, 1]
===== cycle 9
  backend scalar: 4:LS:[SR2, SR0, 0]
  decode: 5:LS:[SR3, SR0, 1]
  fetch: 6:LS:[SR4, SR0, 2]
===== cycle 10
  dispatch scalar: 5:LS:[SR3, SR0, 1]
  decode: 6:LS:[SR4, SR0, 2]
===== cycle 11
  backend scalar: 5:LS:[SR3, SR0, 1]
  decode: 6:LS:[SR4, SR0, 2]
  fetch: 7:ADD:[SR5, SR1, SR2]
===== cycle 12
  dispatch scalar: 6:LS:[SR4, SR0, 2]
  decode: 7:ADD:[SR5, SR1, SR2]
  fetch: 8:SS:[SR5, SR0, 8]
===== cycle 13
  backend scalar: 6:LS:[SR4, SR0, 2]
  dispatch scalar: 7:ADD:[SR5, SR1, SR2]
  decode: 8:SS:[SR5, SR0, 8]
===== cycle 14
  backend scalar: 7:ADD:[SR5, SR1, SR2]
  decode: 8:SS:[SR5, SR0, 8]
  fetch: 9:SUB:[SR5, SR3, SR1]
===== cycle 15
  dispatch scalar: 8:SS:[SR5, SR0, 8]
  decode: 9:SUB:[SR5, SR3, SR1]
===== cycle 16
  backend scalar: 8:SS:[SR5, SR0, 8]
  decode: 9:SUB:[SR5, SR3, SR1]
  fetch: 10:SS:[SR5, SR0, 9]
===== cycle 17
  dispatch scalar: 9:SUB:[SR5, SR3, SR1]
  decode: 10:SS:[SR5, SR0, 9]
===== cycle 18
  backend scalar: 9:SUB:[SR5, SR3, SR1]
  decode: 10:SS:[SR5, SR0, 9]
  fetch: 11:AND:[SR5, SR3, SR4]
===== cycle 19
  dispatch scalar: 10:SS:[SR5, SR0, 9]
  decode: 11:AND:[SR5, SR3, SR4]
===== cycle 20
  backend scalar: 10:SS:[SR5, SR0, 9]
  decode: 11:AND:[SR5, SR3, SR4]
  fetch: 12:SS:[SR5, SR0, 10]
===== cycle 21
  dispatch scalar: 11:AND:[SR5, SR3, SR4]
  decode: 12:SS:[SR5, SR0, 10]
===== cycle 22
  backend scalar: 11:AND:[SR5, SR3, SR4]
  decode: 12:SS:[SR5, SR0, 10]
  fetch: 13:OR:[SR5, SR3, SR4]
===== cycle 23
  dispatch scalar: 12:SS:[SR5, SR0, 10]
  decode: 13:OR:[SR5, SR3, SR4]
===== cycle 24
  backend scalar: 12:SS:[SR5, SR0, 10]
  decode: 13:OR:[SR5, SR3, SR4]
  fetch: 14:SS:[SR5, SR0, 11]
===== cycle 25
  dispatch scalar: 13:OR:[SR5, SR3, SR4]
  decode: 14:SS:[SR5, SR0, 11]
===== cycle 26
  backend scalar: 13:OR:[SR5, SR3, SR4]
  decode: 14:SS:[SR5, SR0, 11]
  fetch: 15:XOR:[SR5, SR3, SR4]
===== cycle 27
  dispatch scalar: 14:SS:[SR5, SR0, 11]
  decode: 15:XOR:[SR5, SR3, SR4]
===== cycle 28
  backend scalar: 14:SS:[SR5, SR0, 11]
  decode: 15:XOR:[SR5, SR3, SR4]
  fetch: 16:SS:[SR5, SR0, 12]
===== cycle 29
  dispatch scalar: 15:XOR:[SR5, SR3, SR4]
  decode: 16:SS:[SR5, SR0, 12]
===== cycle 30
  backend scalar: 15:XOR:[SR5, SR3, SR4]
  decode: 16:SS:[SR5, SR0, 12]
  fetch: 17:SLL:[SR5, SR1, SR2]
===== cycle 31
  dispatch scalar: 16:SS:[SR5, SR0, 12]
  decode: 17:SLL:[SR5, SR1, SR2]
===== cycle 32
  backend scalar: 16:SS:[SR5, SR0, 12]
  decode: 17:SLL:[SR5, SR1, SR2]
  fetch: 18:SS:[SR5, SR0, 13]
===== cycle 33
  dispatch scalar: 17:SLL:[SR5, SR1, SR2]
  decode: 18:SS:[SR5, SR0, 13]
===== cycle 34
  backend scalar: 17:SLL:[SR5, SR1, SR2]
  decode: 18:SS:[SR5, SR0, 13]
  fetch: 19:SRL:[SR5, SR1, SR2]
===== cycle 35
  dispatch scalar: 18:SS:[SR5, SR0, 13]
  decode: 19:SRL:[SR5, SR1, SR2]
===== cycle 36
  backend scalar: 18:SS:[SR5, SR0, 13]
  decode: 19:SRL:[SR5, SR1, SR2]
  fetch: 20:SS:[SR5, SR0, 14]
===== cycle 37
  dispatch scalar: 19:SRL:[SR5, SR1, SR2]
  decode: 20:SS:[SR5, SR0, 14]
===== cycle 38
  backend scalar: 19:SRL:[SR5, SR1, SR2]
  decode: 20:SS:[SR5, SR0, 14]
  fetch: 21:SRA:[SR5, SR3, SR2]
===== cycle 39
  dispatch scalar: 20:SS:[SR5, SR0, 14]
  decode: 21:SRA:[SR5, SR3, SR2]
===== cycle 40
  backend scalar: 20:SS:[SR5, SR0, 14]
  decode: 21:SRA:[SR5, SR3, SR2]
  fetch: 22:SS:[SR5, SR0, 15]
===== cycle 41
  dispatch scalar: 21:SRA:[SR5, SR3, SR2]
  decode: 22:SS:[SR5, SR0, 15]
===== cycle 42
  backend scalar: 21:SRA:[SR5, SR3, SR2]
  decode: 22:SS:[SR5, SR0, 15]
  fetch: 23:BEQ:[SR1, SR1, 5]
===== cycle 43
  dispatch scalar: 22:SS:[SR5, SR0, 15]
  decode: 23:BEQ:[SR1, SR1, 5]
  fetch: 24:BLE:[SR2, SR4, -1]
===== cycle 44
  backend scalar: 22:SS:[SR5, SR0, 15]
  dispatch scalar: 23:BEQ:[SR1, SR1, 5]
  decode: 24:BLE:[SR2, SR4, -1]
  fetch: 25:BLT:[SR2, SR4, -1]
===== cycle 45
  backend scalar: 23:BEQ:[SR1, SR1, 5]
  dispatch scalar: 24:BLE:[SR2, SR4, -1]
  decode: 25:BLT:[SR2, SR4, -1]
===== cycle 46
  backend scalar: 24:BLE:[SR2, SR4, -1]
  decode: 25:BLT:[SR2, SR4, -1]
  fetch: 26:BGE:[SR2, SR3, -1]
===== cycle 47
  dispatch scalar: 25:BLT:[SR2, SR4, -1]
  decode: 26:BGE:[SR2, SR3, -1]
===== cycle 48
  backend scalar: 25:BLT:[SR2, SR4, -1]
  decode: 26:BGE:[SR2, SR3, -1]
  fetch: 27:BGT:[SR2, SR3, -1]
===== cycle 49
  dispatch scalar: 26:BGE:[SR2, SR3, -1]
  decode: 27:BGT:[SR2, SR3, -1]
===== cycle 50
  backend scalar: 26:BGE:[SR2, SR3, -1]
  decode: 27:BGT:[SR2, SR3, -1]
  fetch: 28:BNE:[SR1, SR2, 5]
===== cycle 51
  dispatch scalar: 27:BGT:[SR2, SR3, -1]
  decode: 28:BNE:[SR1, SR2, 5]
===== cycle 52
  backend scalar: 27:BGT:[SR2, SR3, -1]
  decode: 28:BNE:[SR1, SR2, 5]
  fetch: 29:HALT:[]
===== cycle 53
  dispatch scalar: 28:BNE:[SR1, SR2, 5]
  decode: 29:HALT:[]
===== cycle 54
  backend scalar: 28:BNE:[SR1, SR2, 5]
  dispatch scalar: 29:HALT:[]
===== cycle 55
  backend scalar: 29:HALT:[]
